{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Level1.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Square from '../Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level1(props) {\n  _s();\n\n  const [squareValue, setSquareValue] = useState();\n  const row1 = [false, false, false, false, false, false, false, false, false, false];\n  const row2 = [false, false, false, true, false, false, false, false, false, false];\n  const row3 = [false, false, true, false, false, false, true, false, false, false];\n  const boardRow1 = row1.map(tf => {\n    if (tf == true) {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        squareValue: true,\n        onClick: () => {\n          setSquareValue(false);\n        }\n      }, 'square' + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        squareValue: false,\n        onClick: () => {\n          setSquareValue(true);\n        }\n      }, 'square' + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    }\n  });\n  const boardRow2 = row2.map(tf => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: tf\n    }, 'square-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  });\n  const boardRow3 = row3.map(tf => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: tf\n    }, 'square' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardRow1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardRow2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: boardRow3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Level1, \"GKG1Gc7ejO76YsGV8MugVTqi+Go=\");\n\n_c = Level1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level1\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Level1.js"],"names":["React","useState","nanoid","Square","Level1","props","squareValue","setSquareValue","row1","row2","row3","boardRow1","map","tf","boardRow2","boardRow3"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AAEA,QAAMO,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,CAAb;AACA,QAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,KAA1C,EAAiD,KAAjD,EAAwD,KAAxD,EAA+D,KAA/D,CAAb;AACA,QAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,IAA1C,EAAgD,KAAhD,EAAuD,KAAvD,EAA8D,KAA9D,CAAb;AAEA,QAAMC,SAAS,GAAGH,IAAI,CAACI,GAAL,CAAUC,EAAE,IAAG;AACzB,QAAGA,EAAE,IAAI,IAAT,EAAe;AACX,0BACI,QAAC,MAAD;AACI,QAAA,WAAW,EAAE,IADjB;AAEI,QAAA,OAAO,EAAE,MAAM;AAACN,UAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB;AAF1C,SAGS,WAASL,MAAM,EAHxB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,MAQO;AACH,0BACI,QAAC,MAAD;AACI,QAAA,WAAW,EAAE,KADjB;AAEI,QAAA,OAAO,EAAE,MAAM;AAACK,UAAAA,cAAc,CAAC,IAAD,CAAd;AAAqB;AAFzC,SAGS,WAASL,MAAM,EAHxB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACR,GAlBiB,CAAlB;AAoBA,QAAMY,SAAS,GAAGL,IAAI,CAACG,GAAL,CAASC,EAAE,IAAI;AAC7B,wBACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEA;AADX,OAES,YAAUX,MAAM,EAFzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPiB,CAAlB;AASA,QAAMa,SAAS,GAAGL,IAAI,CAACE,GAAL,CAASC,EAAE,IAAI;AAC7B,wBACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEA;AADX,OAES,WAASX,MAAM,EAFxB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPiB,CAAlB;AASA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKS;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA1DuBX,M;;KAAAA,M","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Square from '../Square';\n\nexport default function Level1(props) {\n    const [squareValue, setSquareValue] = useState();\n\n    const row1 = [false, false, false, false, false, false, false, false, false, false];\n    const row2 = [false, false, false, true, false, false, false, false, false, false];\n    const row3 = [false, false, true, false, false, false, true, false, false, false];\n\n    const boardRow1 = row1.map( tf =>{\n            if(tf == true) {\n                return (\n                    <Square \n                        squareValue={true}\n                        onClick={() => {setSquareValue(false)}}\n                        key={'square'+nanoid()}\n                    />\n                );\n            } else {\n                return (\n                    <Square \n                        squareValue={false}\n                        onClick={() => {setSquareValue(true)}}\n                        key={'square'+nanoid()}\n                    />\n                );\n            }\n    });\n\n    const boardRow2 = row2.map(tf => {\n        return (\n            <Square \n                value={tf}\n                key={'square-'+nanoid()}\n            />\n        );\n    });\n\n    const boardRow3 = row3.map(tf => {\n        return (\n            <Square \n                value={tf}\n                key={'square'+nanoid()}\n            />\n        );\n    });\n\n    return (\n        <div>\n            <div className='board-row'>\n                {boardRow1}\n            </div>\n            <div className='board-row'>\n                {boardRow2}\n            </div>\n            <div className='board-row'>\n                {boardRow3}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}