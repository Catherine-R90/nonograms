{"ast":null,"code":"export default function CheckRow(gameRows, boardRows, rowId) {\n  const gameVals = [];\n  gameRows.map(row => {\n    row.map(square => {\n      if (square.rowindex === rowId) {\n        return gameVals.push(square.value);\n      }\n    });\n  });\n  const boardVals = boardRow.map(square => {\n    if (square.value === \"x-square\") {\n      return false;\n    } else {\n      return square.value;\n    }\n  });\n  const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n  const length = gameVals.length === boardVals.length;\n  const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n  if (isArray === true && length === true && matchVals === true) {\n    // return true;\n    const updatedRow = boardRow.map(square => {\n      if (square.value === false) {\n        return { ...square,\n          value: \"x-square\"\n        };\n      }\n\n      return square;\n    });\n    return updatedRow;\n  }\n}\n_c = CheckRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRow\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/CheckRow.js"],"names":["CheckRow","gameRows","boardRows","rowId","gameVals","map","row","square","rowindex","push","value","boardVals","boardRow","isArray","Array","length","matchVals","JSON","stringify","updatedRow"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,KAAvC,EAA8C;AACzD,QAAMC,QAAQ,GAAG,EAAjB;AACAH,EAAAA,QAAQ,CAACI,GAAT,CAAaC,GAAG,IAAE;AACdA,IAAAA,GAAG,CAACD,GAAJ,CAAQE,MAAM,IAAE;AACZ,UAAGA,MAAM,CAACC,QAAP,KAAoBL,KAAvB,EAA8B;AAC1B,eAAOC,QAAQ,CAACK,IAAT,CAAcF,MAAM,CAACG,KAArB,CAAP;AACH;AACJ,KAJD;AAKH,GAND;AAQA,QAAMC,SAAS,GAAGC,QAAQ,CAACP,GAAT,CAAaE,MAAM,IAAE;AACnC,QAAGA,MAAM,CAACG,KAAP,KAAiB,UAApB,EAAgC;AAC5B,aAAO,KAAP;AACH,KAFD,MAEO;AACH,aAAOH,MAAM,CAACG,KAAd;AACH;AACJ,GANiB,CAAlB;AAQA,QAAMG,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcT,QAAd,KAA2BU,KAAK,CAACD,OAAN,CAAcF,SAAd,CAA3C;AACA,QAAMI,MAAM,GAAGX,QAAQ,CAACW,MAAT,KAAoBJ,SAAS,CAACI,MAA7C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeP,SAAf,MAA8BM,IAAI,CAACC,SAAL,CAAed,QAAf,CAAhD;;AAEA,MAAGS,OAAO,KAAK,IAAZ,IAAoBE,MAAM,KAAK,IAA/B,IAAuCC,SAAS,KAAK,IAAxD,EAA8D;AAC1D;AACA,UAAMG,UAAU,GAAGP,QAAQ,CAACP,GAAT,CAAaE,MAAM,IAAE;AACpC,UAAGA,MAAM,CAACG,KAAP,KAAiB,KAApB,EAA2B;AACvB,eAAO,EAAC,GAAGH,MAAJ;AAAYG,UAAAA,KAAK,EAAC;AAAlB,SAAP;AACH;;AACD,aAAOH,MAAP;AACH,KALkB,CAAnB;AAMA,WAAOY,UAAP;AACH;AACJ;KAhCuBnB,Q","sourcesContent":["export default function CheckRow(gameRows, boardRows, rowId) {\n    const gameVals = []\n    gameRows.map(row=>{\n        row.map(square=>{\n            if(square.rowindex === rowId) {\n                return gameVals.push(square.value);\n            }\n        })\n    })\n    \n    const boardVals = boardRow.map(square=>{\n        if(square.value === \"x-square\") {\n            return false;\n        } else {\n            return square.value;\n        }\n    });\n\n    const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n    const length = gameVals.length === boardVals.length;\n    const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n    if(isArray === true && length === true && matchVals === true) {\n        // return true;\n        const updatedRow = boardRow.map(square=>{\n            if(square.value === false) {\n                return {...square, value:\"x-square\"}\n            }\n            return square;\n        });\n        return updatedRow;\n    } \n}"]},"metadata":{},"sourceType":"module"}