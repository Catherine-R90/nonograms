{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\";\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  const rows = props.row;\n  const row = rows.map(row => {\n    row.map(tf => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: tf\n      }, 'square-' + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    });\n  });\n  const boardRow1 = row1.map(tf => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: tf\n    }, 'square-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","Square","Row","props","rows","row","map","tf","boardRow1","row1"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,GAAnB;AAEA,QAAMA,GAAG,GAAGD,IAAI,CAACE,GAAL,CAASD,GAAG,IAAI;AACxBA,IAAAA,GAAG,CAACC,GAAJ,CAAQC,EAAE,IAAI;AACV,0BACI,QAAC,MAAD;AACI,QAAA,KAAK,EAAEA;AADX,SAES,YAAUR,MAAM,EAFzB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD;AAQH,GATW,CAAZ;AAWA,QAAMS,SAAS,GAAGC,IAAI,CAACH,GAAL,CAAUC,EAAE,IAAG;AAC7B,wBACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEA;AADX,OAES,YAAUR,MAAM,EAFzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPiB,CAAlB;AASA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA5BuBG,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Square from \"./Square\";\n\nexport default function Row(props) {\n    const rows = props.row;\n\n    const row = rows.map(row => {\n        row.map(tf => {\n            return (\n                <Square \n                    value={tf}\n                    key={'square-'+nanoid()}\n                />\n            );\n        });\n    });\n\n    const boardRow1 = row1.map( tf =>{\n        return (\n            <Square \n                value={tf}\n                key={'square-'+nanoid()}\n            />\n        );\n    });\n\n    return (\n        <div className=\"board-row\">\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}