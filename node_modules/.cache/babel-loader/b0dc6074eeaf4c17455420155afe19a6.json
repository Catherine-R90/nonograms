{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Level1.js\";\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level1() {\n  const rawRows = [[false, false, false, false, false, false, false, false, false, false], [false, false, false, true, false, false, false, false, false, false], [false, false, true, false, false, false, true, false, false, false], [false, false, false, true, false, true, false, false, false, false], [false, false, true, true, true, true, true, false, false, false], [false, false, true, false, false, false, true, true, true, false], [false, false, true, false, false, false, true, false, true, false], [false, false, true, false, false, false, true, true, true, false], [false, false, true, true, true, true, true, false, false, false], [true, true, true, true, true, true, true, true, true, true]];\n  const gameRows = RowObject(rawRows);\n  const colNums = Columns(gameRows);\n  const rowNums = Rows(gameRows);\n  const level1 = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = Level1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level1\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Level1.js"],"names":["React","nanoid","Row","Board","Columns","Rows","RowObject","Level1","rawRows","gameRows","colNums","rowNums","level1","map","row","board"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\n\nexport default function Level1() {\n    const rawRows = [\n        [false, false, false, false, false, false, false, false, false, false],\n        [false, false, false, true, false, false, false, false, false, false],\n        [false, false, true, false, false, false, true, false, false, false],\n        [false, false, false, true, false, true, false, false, false, false],\n        [false, false, true, true, true, true, true, false, false, false],\n        [false, false, true, false, false, false, true, true, true, false],\n        [false, false, true, false, false, false, true, false, true, false],\n        [false, false, true, false, false, false, true, true, true, false],\n        [false, false, true, true, true, true, true, false, false, false],\n        [true, true, true, true, true, true, true, true, true, true]\n    ];\n\n    const gameRows = RowObject(rawRows);\n\n    const colNums = Columns(gameRows);\n    const rowNums = Rows(gameRows);\n\n    const level1 = gameRows.map(row=>{\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n\n    return (\n        <div>\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}