{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  // const blankNum = {nums:\"\", row:\"\"};\n  const row1 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row1Nums = {\n    nums: \"5\",\n    row: 0\n  };\n  const col1Nums = {\n    nums: \"5\",\n    col: 0\n  };\n  const row2 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row2Nums = {\n    nums: \"1\",\n    row: 1\n  };\n  const col2Nums = {\n    nums: \"1, 1\",\n    col: 1\n  };\n  const row3 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row3Nums = {\n    nums: \"1\",\n    row: 2\n  };\n  const col3Nums = {\n    nums: \"1, 1\",\n    col: 2\n  };\n  const row4 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row4Nums = {\n    nums: \"1\",\n    row: 3\n  };\n  const col4Nums = {\n    nums: \"1, 1\",\n    col: 3\n  };\n  const row5 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row5Nums = {\n    nums: \"5\",\n    row: 4\n  };\n  const col5Nums = {\n    nums: \"1, 1\",\n    col: 4\n  };\n  const gameRows = [row1, row2, row3, row4, row5];\n  const rowCount = gameRows.map(row => {\n    let continueSequence = false;\n    let count = 0;\n    let sequences = [];\n    row.map(square => {\n      if (square.value === false && continueSequence === true) {\n        continueSequence = false;\n        sequences.push(count);\n        count = 0;\n      }\n\n      if (square.value === true) {\n        continueSequence = true;\n        count++;\n      }\n\n      return sequences.push(count);\n    });\n    return sequences;\n  });\n  const rowNums = rowCount.map(seq => {\n    let only1s = [];\n    let greaterThan1 = [];\n    seq.map(num => {\n      if (num === 1) {\n        return only1s.push(num);\n      } else {\n        return greaterThan1.push(num);\n      }\n    });\n    const ones = '';\n\n    for (let i = 0; i < only1s.length; i++) {\n      return ones = only1s[i] + \",\";\n    }\n\n    const greater = '';\n\n    for (let i = 0; i < greaterThan1.length; i++) {\n      return greater = greaterThan1[i] + greaterThan1[i];\n    }\n\n    return console.log(`1s: ${ones}, greater: ${greater}`); // return {nums:`${nums}`, row:nanoid()}\n  });\n  const blankNum = {\n    nums: \"\",\n    row: \"\"\n  }; // const rowNums = [blankNum, row1Nums, row2Nums, row3Nums, row4Nums, row5Nums];\n\n  const colNums = [col1Nums, col2Nums, col3Nums, col4Nums, col5Nums];\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"row count:\"), console.log(rowCount), console.log(\"row nums: \"), console.log(rowNums), board, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Tutorial","row1","value","id","key","row1Nums","nums","row","col1Nums","col","row2","row2Nums","col2Nums","row3","row3Nums","col3Nums","row4","row4Nums","col4Nums","row5","row5Nums","col5Nums","gameRows","rowCount","map","continueSequence","count","sequences","square","push","rowNums","seq","only1s","greaterThan1","num","ones","i","length","greater","console","log","blankNum","colNums","tutorial","board"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\n\nexport default function Tutorial() {\n    // const blankNum = {nums:\"\", row:\"\"};\n    const row1 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row1Nums= {nums:\"5\", row:0};\n    const col1Nums = {nums:\"5\", col:0};\n    const row2 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n    ];\n    const row2Nums = {nums:\"1\", row:1};\n    const col2Nums = {nums:\"1, 1\", col:1};\n    const row3 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row3Nums = {nums: \"1\", row:2};\n    const col3Nums = {nums:\"1, 1\", col:2};\n    const row4 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row4Nums = {nums:\"1\", row:3};\n    const col4Nums = {nums:\"1, 1\", col:3};\n    const row5 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row5Nums = {nums:\"5\", row:4};\n    const col5Nums = {nums:\"1, 1\", col:4};\n\n    const gameRows = [row1, row2, row3, row4, row5];    \n\n    const rowCount = gameRows.map(row=>{\n        let continueSequence = false;\n        let count = 0;\n        let sequences = []\n        row.map(square=>{\n            if(square.value === false && continueSequence === true) {\n                continueSequence = false;\n                sequences.push(count);\n                count = 0;\n            }\n            if(square.value === true) {\n                continueSequence = true;\n                count++\n            }\n            return sequences.push(count);\n        })\n        return sequences;\n    })\n\n    const rowNums = rowCount.map(seq=>{\n        let only1s = [];\n        let greaterThan1 = [];\n        seq.map(num =>{\n            if(num === 1) {\n                return only1s.push(num);\n            } else {\n                return greaterThan1.push(num);\n            }\n        });\n        const ones = '';\n        for(let i = 0; i< only1s.length; i++){\n            return ones = only1s[i] + \",\";\n        }\n        const greater = '';\n        for(let i = 0; i < greaterThan1.length; i++) {\n            return greater= greaterThan1[i]+greaterThan1[i];\n        }\n        return console.log(`1s: ${ones}, greater: ${greater}`)\n        // return {nums:`${nums}`, row:nanoid()}\n\n    });\n\n    const blankNum = {nums:\"\", row:\"\"};\n    // const rowNums = [blankNum, row1Nums, row2Nums, row3Nums, row4Nums, row5Nums];\n    const colNums = [col1Nums, col2Nums, col3Nums, col4Nums, col5Nums];\n\n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        )\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {console.log(\"row count:\")}\n            {console.log(rowCount)}\n            {console.log(\"row nums: \")}\n            {console.log(rowNums)}\n            {board}           \n            <div className='level'>\n                {/* {tutorial} */}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}