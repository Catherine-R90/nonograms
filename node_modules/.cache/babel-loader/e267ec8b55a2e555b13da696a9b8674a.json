{"ast":null,"code":"import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nexport default function Tutorial() {\n  const row1 = [{\n    value: true,\n    id: \"square-tut1\",\n    key: nanoid(),\n    row: 1,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-tut2\",\n    key: nanoid(),\n    row: 1,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-tut3\",\n    key: nanoid(),\n    row: 1,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-tut4\",\n    key: nanoid(),\n    row: 1,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-tut5\",\n    key: nanoid(),\n    row: 1,\n    col: 5\n  }];\n  const row2 = [{\n    value: true,\n    id: \"square-tut6\",\n    key: nanoid(),\n    row: 2,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut7\",\n    key: nanoid(),\n    row: 2,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut8\",\n    key: nanoid(),\n    row: 2,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut9\",\n    key: nanoid(),\n    row: 2,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut10\",\n    key: nanoid(),\n    row: 2,\n    col: 5\n  }];\n  const row3 = [{\n    value: true,\n    id: \"square-tut11\",\n    key: nanoid(),\n    row: 3,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut12\",\n    key: nanoid(),\n    row: 3,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut13\",\n    key: nanoid(),\n    row: 3,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut14\",\n    key: nanoid(),\n    row: 3,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut15\",\n    key: nanoid(),\n    row: 3,\n    col: 5\n  }];\n  const row4 = [{\n    value: true,\n    id: \"square-tut16\",\n    key: nanoid(),\n    row: 4,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut17\",\n    key: nanoid(),\n    row: 4,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut18\",\n    key: nanoid(),\n    row: 4,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut19\",\n    key: nanoid(),\n    row: 4,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut20\",\n    key: nanoid(),\n    row: 4,\n    col: 5\n  }];\n  const row5 = [{\n    value: true,\n    id: \"square-tut21\",\n    key: nanoid(),\n    row: 5,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-tut22\",\n    key: nanoid(),\n    row: 5,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-tut23\",\n    key: nanoid(),\n    row: 5,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-tut24\",\n    key: nanoid(),\n    row: 5,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-tut25\",\n    key: nanoid(),\n    row: 5,\n    col: 5\n  }]; // const gameRows = [row1, row2, row3, row4, row5];  \n\n  const rawRows = [[true, true, true, true, true], [true, false, false, false, false], [true, false, false, false, false], [true, false, false, false, false], [true, true, true, true, true]];\n  console.log(rawRows); // const colNums = Columns(gameRows);\n  // const rowNums = Rows(gameRows);\n  // const tutorial = gameRows.map(row => {\n  //     return (\n  //         <Row \n  //             row={row}\n  //             id={row.id}\n  //             key={'row-'+nanoid()}\n  //         />\n  //     );\n  // });\n  // const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n  // return (\n  //     <div>\n  //         {board}\n  //     </div>\n  // );\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Columns","Rows","Tutorial","row1","value","id","key","row","col","row2","row3","row4","row5","rawRows","console","log"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\n\nexport default function Tutorial() {\n    const row1 = [\n        {value:true, id:\"square-tut1\", key:nanoid(), row:1, col:1},\n        {value:true, id:\"square-tut2\", key:nanoid(), row:1, col:2},\n        {value:true, id:\"square-tut3\", key:nanoid(), row:1, col:3},\n        {value:true, id:\"square-tut4\", key:nanoid(), row:1, col:4},\n        {value:true, id:\"square-tut5\", key:nanoid(), row:1, col:5},\n    ];\n    const row2 = [\n        {value:true, id:\"square-tut6\", key:nanoid(), row:2, col:1},\n        {value:false, id:\"square-tut7\", key:nanoid(), row:2, col:2},\n        {value:false, id:\"square-tut8\", key:nanoid(), row:2, col:3},\n        {value:false, id:\"square-tut9\", key:nanoid(), row:2, col:4},\n        {value:false, id:\"square-tut10\", key:nanoid(), row:2, col:5},\n    ];\n    const row3 = [\n        {value:true, id:\"square-tut11\", key:nanoid(), row:3, col:1},\n        {value:false, id:\"square-tut12\", key:nanoid(), row:3, col:2},\n        {value:false, id:\"square-tut13\", key:nanoid(), row:3, col:3},\n        {value:false, id:\"square-tut14\", key:nanoid(), row:3, col:4},\n        {value:false, id:\"square-tut15\", key:nanoid(), row:3, col:5},\n    ];\n    const row4 = [\n        {value:true, id:\"square-tut16\", key:nanoid(), row:4, col:1},\n        {value:false, id:\"square-tut17\", key:nanoid(), row:4, col:2},\n        {value:false, id:\"square-tut18\", key:nanoid(), row:4, col:3},\n        {value:false, id:\"square-tut19\", key:nanoid(), row:4, col:4},\n        {value:false, id:\"square-tut20\", key:nanoid(), row:4, col:5},\n    ];\n    const row5 = [\n        {value:true, id:\"square-tut21\", key:nanoid(), row:5, col:1},\n        {value:true, id:\"square-tut22\", key:nanoid(), row:5, col:2},\n        {value:true, id:\"square-tut23\", key:nanoid(), row:5, col:3},\n        {value:true, id:\"square-tut24\", key:nanoid(), row:5, col:4},\n        {value:true, id:\"square-tut25\", key:nanoid(), row:5, col:5},\n    ];\n\n    // const gameRows = [row1, row2, row3, row4, row5];  \n\n    const rawRows = [\n        [true, true, true, true, true],\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n        [true, true, true, true, true],\n    ];\n    console.log(rawRows);\n\n    // const colNums = Columns(gameRows);\n\n    // const rowNums = Rows(gameRows);\n\n    // const tutorial = gameRows.map(row => {\n    //     return (\n    //         <Row \n    //             row={row}\n    //             id={row.id}\n    //             key={'row-'+nanoid()}\n    //         />\n    //     );\n    // });\n\n    // const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    // return (\n    //     <div>\n    //         {board}\n    //     </div>\n    // );\n}"]},"metadata":{},"sourceType":"module"}