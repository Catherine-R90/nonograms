{"ast":null,"code":"export default function CheckRow(gameRows, boardRows) {\n  // const gameVals = gameRow.map(square=>{\n  //     return square.value;\n  // })\n  // const boardVals = boardRow.map(square=>{\n  //     if(square.value === \"x-square\") {\n  //         return false;\n  //     } else {\n  //         return square.value;\n  //     }\n  // });\n  const gameVals = [];\n  const boardVals = [];\n  gameRows.map(gRow => {\n    boardRows.map(bRow => {\n      gRow.map(gSquare => {\n        bRow.map(bSquare => {\n          if (gSquare.row === bSquare.row) {\n            gameVals.push(gSquare.value);\n\n            if (bSquare.value === \"x-square\") {\n              boardVals.push(\"false\");\n            } else {\n              boardVals.push(bSquare.value);\n            }\n          }\n        });\n      });\n    });\n  });\n  const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n  const length = gameVals.length === boardVals.length;\n  const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n  console.log(boardVals);\n  console.log(gameVals); // if(isArray === true && length === true && matchVals === true) {\n  //     // return true;\n  //     const updatedRow = boardRow.map(square=>{\n  //         if(square.value === false) {\n  //             return {...square, value:\"x-square\"}\n  //         }\n  //         return square;\n  //     });\n  //     return updatedRow;\n  // } \n}\n_c = CheckRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRow\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/CheckRow.js"],"names":["CheckRow","gameRows","boardRows","gameVals","boardVals","map","gRow","bRow","gSquare","bSquare","row","push","value","isArray","Array","length","matchVals","JSON","stringify","console","log"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuC;AAClD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAE,EAAhB;AACA,QAAMC,SAAS,GAAE,EAAjB;AAEAH,EAAAA,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAAE;AACfJ,IAAAA,SAAS,CAACG,GAAV,CAAcE,IAAI,IAAE;AAChBD,MAAAA,IAAI,CAACD,GAAL,CAASG,OAAO,IAAE;AACdD,QAAAA,IAAI,CAACF,GAAL,CAASI,OAAO,IAAE;AACd,cAAGD,OAAO,CAACE,GAAR,KAAgBD,OAAO,CAACC,GAA3B,EAAgC;AAC5BP,YAAAA,QAAQ,CAACQ,IAAT,CAAcH,OAAO,CAACI,KAAtB;;AACA,gBAAGH,OAAO,CAACG,KAAR,KAAkB,UAArB,EAAiC;AAC7BR,cAAAA,SAAS,CAACO,IAAV,CAAe,OAAf;AACH,aAFD,MAEO;AACHP,cAAAA,SAAS,CAACO,IAAV,CAAeF,OAAO,CAACG,KAAvB;AACH;AACJ;AACJ,SATD;AAUH,OAXD;AAYH,KAbD;AAcH,GAfD;AAiBA,QAAMC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcV,QAAd,KAA2BW,KAAK,CAACD,OAAN,CAAcT,SAAd,CAA3C;AACA,QAAMW,MAAM,GAAGZ,QAAQ,CAACY,MAAT,KAAoBX,SAAS,CAACW,MAA7C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAed,SAAf,MAA8Ba,IAAI,CAACC,SAAL,CAAef,QAAf,CAAhD;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAtCkD,CAwClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;KAlDuBH,Q","sourcesContent":["export default function CheckRow(gameRows, boardRows) {\n    // const gameVals = gameRow.map(square=>{\n    //     return square.value;\n    // })\n    \n    // const boardVals = boardRow.map(square=>{\n    //     if(square.value === \"x-square\") {\n    //         return false;\n    //     } else {\n    //         return square.value;\n    //     }\n    // });\n\n    const gameVals =[];\n    const boardVals =[];\n\n    gameRows.map(gRow=>{\n        boardRows.map(bRow=>{\n            gRow.map(gSquare=>{\n                bRow.map(bSquare=>{\n                    if(gSquare.row === bSquare.row) {\n                        gameVals.push(gSquare.value);\n                        if(bSquare.value === \"x-square\") {\n                            boardVals.push(\"false\");\n                        } else {\n                            boardVals.push(bSquare.value);\n                        }\n                    }\n                })\n            })\n        })\n    })\n\n    const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n    const length = gameVals.length === boardVals.length;\n    const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n    console.log(boardVals)\n    console.log(gameVals)\n\n    // if(isArray === true && length === true && matchVals === true) {\n    //     // return true;\n    //     const updatedRow = boardRow.map(square=>{\n    //         if(square.value === false) {\n    //             return {...square, value:\"x-square\"}\n    //         }\n    //         return square;\n    //     });\n    //     return updatedRow;\n    // } \n}"]},"metadata":{},"sourceType":"module"}