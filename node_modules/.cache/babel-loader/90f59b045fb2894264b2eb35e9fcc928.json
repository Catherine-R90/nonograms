{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\"; // import Square from \"./Square\";\n\nimport TrueSquare from \"./TrueSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  _s();\n\n  const [gameRow, setGameRow] = useState(props.row); // const row = rawRow.map(square => {\n  //     return (\n  //         <Square \n  //             value={square}\n  //             key={'square'+nanoid()}\n  //         />\n  //     );\n  // });\n\n  const row = gameRow.map(square => {\n    if (square == true) {\n      return /*#__PURE__*/_jsxDEV(TrueSquare, {\n        value: square\n      }, \"square-\" + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FalseSquare, {\n        value: square\n      }, \"square-\" + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"LpM9kpqEhX0Cpqp1OLGa779xeaU=\");\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","FalseSquare","TrueSquare","Row","props","gameRow","setGameRow","row","map","square"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACG,GAAP,CAAtC,CAD+B,CAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMA,GAAG,GAAGF,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AAC9B,QAAGA,MAAM,IAAI,IAAb,EAAmB;AACf,0BAAO,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA;AAAnB,SAAgC,YAAUV,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BAAO,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEU;AAApB,SAAiC,YAAUV,MAAM,EAAjD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GANW,CAAZ;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKQ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BuBJ,G;;KAAAA,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\n// import Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\n\nexport default function Row(props) {\n    const [gameRow, setGameRow] = useState(props.row);\n\n\n    // const row = rawRow.map(square => {\n    //     return (\n    //         <Square \n    //             value={square}\n    //             key={'square'+nanoid()}\n    //         />\n    //     );\n    // });\n\n    const row = gameRow.map(square => {\n        if(square == true) {\n            return <TrueSquare value={square} key={\"square-\"+nanoid()} />\n        } else {\n            return <FalseSquare value={square} key={\"square-\"+nanoid()} />\n        }\n    })\n\n    return (\n        <div className=\"board-row\">\n            {row}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}