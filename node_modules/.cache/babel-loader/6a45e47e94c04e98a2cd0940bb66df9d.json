{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  _s();\n\n  const [rows, setRows] = useState(props.row);\n  const row = rows.map(square => {\n    if (square.tf == true) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"true-square\",\n        value: square.tf,\n        id: props.id,\n        onClick: () => handleClick(props.id)\n      }, \"square-\" + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"false-square\",\n        value: square.tf,\n        id: props.id,\n        onClick: () => handleClick(props.id)\n      }, \"square-\" + nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }\n  });\n\n  const handleClick = id => {\n    const updatedRow = rows.map(square => {\n      if (square.id == id) {\n        return { ...square,\n          value: !value\n        };\n      }\n\n      return square;\n    });\n    setRows(updatedRow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"ypHkHOyccP9HvlUq3OgrLBHK4gU=\");\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","FalseSquare","Square","TrueSquare","Row","props","rows","setRows","row","map","square","tf","id","handleClick","updatedRow","value"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAK,CAACG,GAAP,CAAhC;AAEA,QAAMA,GAAG,GAAGF,IAAI,CAACG,GAAL,CAASC,MAAM,IAAI;AAC3B,QAAGA,MAAM,CAACC,EAAP,IAAa,IAAhB,EAAsB;AAClB,0BACI;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,KAAK,EAAED,MAAM,CAACC,EAFlB;AAII,QAAA,EAAE,EAAEN,KAAK,CAACO,EAJd;AAKI,QAAA,OAAO,EAAE,MAAMC,WAAW,CAACR,KAAK,CAACO,EAAP;AAL9B,SAGS,YAAUb,MAAM,EAHzB;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVD,MAUO;AACH,0BACI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,KAAK,EAAEW,MAAM,CAACC,EAFlB;AAII,QAAA,EAAE,EAAEN,KAAK,CAACO,EAJd;AAKI,QAAA,OAAO,EAAE,MAAMC,WAAW,CAACR,KAAK,CAACO,EAAP;AAL9B,SAGS,YAAUb,MAAM,EAHzB;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;AACJ,GAtBW,CAAZ;;AAwBA,QAAMc,WAAW,GAAID,EAAD,IAAQ;AACxB,UAAME,UAAU,GAAGR,IAAI,CAACG,GAAL,CAASC,MAAM,IAAI;AAClC,UAAGA,MAAM,CAACE,EAAP,IAAaA,EAAhB,EAAoB;AAChB,eAAO,EAAC,GAAGF,MAAJ;AAAYK,UAAAA,KAAK,EAAC,CAACA;AAAnB,SAAP;AACH;;AACD,aAAOL,MAAP;AACH,KALkB,CAAnB;AAMAH,IAAAA,OAAO,CAACO,UAAD,CAAP;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1CuBJ,G;;KAAAA,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\n\nexport default function Row(props) {\n    const [rows, setRows] = useState(props.row);\n\n    const row = rows.map(square => {\n        if(square.tf == true) {\n            return (\n                <button \n                    className=\"true-square\"\n                    value={square.tf}\n                    key={\"square-\"+nanoid()}\n                    id={props.id}\n                    onClick={() => handleClick(props.id)}\n                ></button>\n            );\n        } else {\n            return (\n                <button \n                    className=\"false-square\"\n                    value={square.tf}\n                    key={\"square-\"+nanoid()}\n                    id={props.id}\n                    onClick={() => handleClick(props.id)}\n                ></button>\n            );\n        }\n    })\n\n    const handleClick = (id) => {\n        const updatedRow = rows.map(square => {\n            if(square.id == id) {\n                return {...square, value:!value}\n            }\n            return square;\n        });\n        setRows(updatedRow);\n    }\n\n    return (\n        <div className=\"board-row\">\n            {row}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}