{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(props) {\n  _s();\n\n  const row = new Array(props.length).fill(false);\n  const column = new Array(props.height).fill(row);\n  const board = column.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  });\n  const [boardRow, setBoardRow] = useState(board); // const winState = (rows, board) => {\n  //     rows.map(gameRow=>{\n  //         board.map(boardRow => {\n  //             if(boardRow.state === gameRow.state) {\n  //                 return console.log(\"success!\");\n  //             }\n  //         });\n  //         return;\n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [console.log(\"game rows: \" + rows), console.log(\"board rows: \" + column), board]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"GT7dDsEuXpL4HdO26JN1B5AlTVc=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Board.js"],"names":["nanoid","Row","Board","props","row","Array","length","fill","column","height","board","map","boardRow","setBoardRow","useState","console","log","rows"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACG,MAAhB,EAAwBC,IAAxB,CAA6B,KAA7B,CAAZ;AACA,QAAMC,MAAM,GAAG,IAAIH,KAAJ,CAAUF,KAAK,CAACM,MAAhB,EAAwBF,IAAxB,CAA6BH,GAA7B,CAAf;AAEA,QAAMM,KAAK,GAAGF,MAAM,CAACG,GAAP,CAAWP,GAAG,IAAI;AAC5B,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA;AADT,OAES,SAAOJ,MAAM,EAFtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPa,CAAd;AASA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAACJ,KAAD,CAAxC,CAbiC,CAgBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACKK,OAAO,CAACC,GAAR,CAAY,gBAAcC,IAA1B,CADL,EAEKF,OAAO,CAACC,GAAR,CAAY,iBAAeR,MAA3B,CAFL,EAGKE,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlCuBR,K;;KAAAA,K","sourcesContent":["import { nanoid } from \"nanoid\";\nimport Row from \"./Row\";\n\nexport default function Board(props) {\n    const row = new Array(props.length).fill(false);\n    const column = new Array(props.height).fill(row);\n\n    const board = column.map(row => {\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const [boardRow, setBoardRow] = useState(board);\n\n\n    // const winState = (rows, board) => {\n    //     rows.map(gameRow=>{\n    //         board.map(boardRow => {\n    //             if(boardRow.state === gameRow.state) {\n    //                 return console.log(\"success!\");\n    //             }\n    //         });\n    //         return;\n    //     });\n    // }\n\n    return (\n        <div className=\"board\">\n            {console.log(\"game rows: \"+rows)}\n            {console.log(\"board rows: \"+column)}\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}