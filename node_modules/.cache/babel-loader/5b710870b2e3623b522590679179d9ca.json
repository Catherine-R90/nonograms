{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(props) {\n  _s();\n\n  const [gameRows, setGameRows] = useState(props.gameRows);\n  const rowContent = {\n    value: false\n  };\n  const rawRow = new Array(props.length).fill(rowContent);\n  const rows = rawRow.map(row => {\n    return Object.assign({\n      id: \"square-\" + nanoid()\n    }, row);\n  });\n  const [boardRows, setBoardRows] = useState(new Array(props.height).fill(rows));\n  const board = boardRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  });\n\n  function winState(boardRows, gameRows) {\n    for (let i = 0; i < boardRows.length; i++) {\n      for (let j = 0; j < gameRows.length; j++) {\n        if (boardRows[i].value === gameRows[j].value) {\n          return console.log(\"success!\");\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"BiZI9KU5xcpe7ZZczMobLuFknMo=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Board.js"],"names":["nanoid","useState","Row","Board","props","gameRows","setGameRows","rowContent","value","rawRow","Array","length","fill","rows","map","row","Object","assign","id","boardRows","setBoardRows","height","board","winState","i","j","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,KAAK,CAACC,QAAP,CAAxC;AAEA,QAAME,UAAU,GAAG;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAnB;AACA,QAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUN,KAAK,CAACO,MAAhB,EAAwBC,IAAxB,CAA6BL,UAA7B,CAAf;AACA,QAAMM,IAAI,GAAGJ,MAAM,CAACK,GAAP,CAAWC,GAAG,IAAG;AAC1B,WAAOC,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAC,YAAUlB,MAAM;AAApB,KAAd,EAAuCe,GAAvC,CAAP;AACH,GAFY,CAAb;AAIA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAIS,KAAJ,CAAUN,KAAK,CAACiB,MAAhB,EAAwBT,IAAxB,CAA6BC,IAA7B,CAAD,CAA1C;AAEA,QAAMS,KAAK,GAAGH,SAAS,CAACL,GAAV,CAAcC,GAAG,IAAI;AAC/B,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA;AADT,OAES,SAAOf,MAAM,EAFtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPa,CAAd;;AASA,WAASuB,QAAT,CAAkBJ,SAAlB,EAA6Bd,QAA7B,EAAuC;AACpC,SAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEL,SAAS,CAACR,MAA5B,EAAoCa,CAAC,EAArC,EAAyC;AACpC,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGpB,QAAQ,CAACM,MAA5B,EAAoCc,CAAC,EAArC,EAAyC;AACtC,YAAGN,SAAS,CAACK,CAAD,CAAT,CAAahB,KAAb,KAAuBH,QAAQ,CAACoB,CAAD,CAAR,CAAYjB,KAAtC,EAA6C;AACzC,iBAAOkB,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAP;AACH;AACH;AACL;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnCuBnB,K;;KAAAA,K","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Row from \"./Row\";\n\nexport default function Board(props) {\n    const [gameRows, setGameRows] = useState(props.gameRows);\n\n    const rowContent = {value:false};\n    const rawRow = new Array(props.length).fill(rowContent);\n    const rows = rawRow.map(row =>{\n        return Object.assign({id:\"square-\"+nanoid()}, row)    \n    });\n\n    const [boardRows, setBoardRows] = useState(new Array(props.height).fill(rows));\n\n    const board = boardRows.map(row => {\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    function winState(boardRows, gameRows) {\n       for(let i = 0; i< boardRows.length; i++) {\n            for(let j = 0; j < gameRows.length; j++) {\n               if(boardRows[i].value === gameRows[j].value) {\n                   return console.log(\"success!\")\n               }\n            } \n       }\n    }\n\n    return (\n        <div className=\"board\">\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}