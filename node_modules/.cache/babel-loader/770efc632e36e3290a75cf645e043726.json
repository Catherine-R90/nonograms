{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  _s();\n\n  const [rows, setRows] = useState(props.row); // const row = rows.map(square => {\n  //     if(square.tf == true) {\n  //         return (\n  //             <button \n  //                 className=\"true-square\"\n  //                 tf={square.tf}\n  //                 key={\"square-\"+nanoid()}\n  //                 id={props.id}\n  //                 onClick={() => handleClick(props.id)}\n  //             ></button>\n  //         );\n  //     } else {\n  //         return (\n  //             <button \n  //                 className=\"false-square\"\n  //                 tf={square.tf}\n  //                 key={\"square-\"+nanoid()}\n  //                 id={props.id}\n  //                 onClick={() => handleClick(props.id)}\n  //             ></button>\n  //         );\n  //     }\n  // })\n\n  const row = rows.map(square => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: square.tf,\n      id: square.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"ypHkHOyccP9HvlUq3OgrLBHK4gU=\");\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","FalseSquare","Square","TrueSquare","Row","props","rows","setRows","row","map","square","tf","id"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAK,CAACG,GAAP,CAAhC,CAD+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMA,GAAG,GAAGF,IAAI,CAACG,GAAL,CAASC,MAAM,IAAI;AAC3B,wBAAO,QAAC,MAAD;AACH,MAAA,KAAK,EAAEA,MAAM,CAACC,EADX;AAEH,MAAA,EAAE,EAAED,MAAM,CAACE;AAFR;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH,GALW,CAAZ;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvCuBJ,G;;KAAAA,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\n\nexport default function Row(props) {\n    const [rows, setRows] = useState(props.row);\n\n    // const row = rows.map(square => {\n    //     if(square.tf == true) {\n    //         return (\n    //             <button \n    //                 className=\"true-square\"\n    //                 tf={square.tf}\n    //                 key={\"square-\"+nanoid()}\n    //                 id={props.id}\n    //                 onClick={() => handleClick(props.id)}\n    //             ></button>\n    //         );\n    //     } else {\n    //         return (\n    //             <button \n    //                 className=\"false-square\"\n    //                 tf={square.tf}\n    //                 key={\"square-\"+nanoid()}\n    //                 id={props.id}\n    //                 onClick={() => handleClick(props.id)}\n    //             ></button>\n    //         );\n    //     }\n    // })\n\n    const row = rows.map(square => {\n        return <Square \n            value={square.tf}\n            id={square.id}\n        />\n    });\n\n    return (\n        <div className=\"board-row\">\n            {row}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}