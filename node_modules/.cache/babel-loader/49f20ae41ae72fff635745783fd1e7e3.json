{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  const rawRows = [[{\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }], [{\n    value: true\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }], [{\n    value: true\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }], [{\n    value: true\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }, {\n    value: false\n  }], [{\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }, {\n    value: true\n  }]]; // const rawRows = [\n  //     [true, true, true, true, true],\n  //     [true, false, false, false, false],\n  //     [true, false, false, false, false],\n  //     [true, false, false, false, false],\n  //     [true, true, true, true, true],\n  // ];\n\n  const test = \"hello\";\n  console.log(test); // const colNums = Columns(gameRows);\n  // const rowNums = Rows(gameRows);\n\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Columns","Rows","Tutorial","rawRows","value","test","console","log","tutorial","gameRows","map","row","id","board","rowNums","colNums"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAMC,OAAO,GAAG,CACZ,CACI;AAACC,IAAAA,KAAK,EAAC;AAAP,GADJ,EAEI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAFJ,EAGI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAHJ,EAII;AAACA,IAAAA,KAAK,EAAC;AAAP,GAJJ,EAKI;AAACA,IAAAA,KAAK,EAAC;AAAP,GALJ,CADY,EAQZ,CACI;AAACA,IAAAA,KAAK,EAAC;AAAP,GADJ,EAEI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAFJ,EAGI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAHJ,EAII;AAACA,IAAAA,KAAK,EAAC;AAAP,GAJJ,EAKI;AAACA,IAAAA,KAAK,EAAC;AAAP,GALJ,CARY,EAeZ,CACI;AAACA,IAAAA,KAAK,EAAC;AAAP,GADJ,EAEI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAFJ,EAGI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAHJ,EAII;AAACA,IAAAA,KAAK,EAAC;AAAP,GAJJ,EAKI;AAACA,IAAAA,KAAK,EAAC;AAAP,GALJ,CAfY,EAsBZ,CACI;AAACA,IAAAA,KAAK,EAAC;AAAP,GADJ,EAEI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAFJ,EAGI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAHJ,EAII;AAACA,IAAAA,KAAK,EAAC;AAAP,GAJJ,EAKI;AAACA,IAAAA,KAAK,EAAC;AAAP,GALJ,CAtBY,EA6BZ,CACI;AAACA,IAAAA,KAAK,EAAC;AAAP,GADJ,EAEI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAFJ,EAGI;AAACA,IAAAA,KAAK,EAAC;AAAP,GAHJ,EAII;AAACA,IAAAA,KAAK,EAAC;AAAP,GAJJ,EAKI;AAACA,IAAAA,KAAK,EAAC;AAAP,GALJ,CA7BY,CAAhB,CAD+B,CAuC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,IAAI,GAAG,OAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAhD+B,CAkD/B;AAEA;;AAEA,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,GAAT,CAAaC,GAAG,IAAI;AACjC,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,EAAE,EAAEA,GAAG,CAACC;AAFZ,OAGS,SAAOf,MAAM,EAHtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARgB,CAAjB;;AAUA,QAAMgB,KAAK,gBAAG,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEJ,QAAjB;AAA2B,IAAA,OAAO,EAAEK,OAApC;AAA6C,IAAA,OAAO,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,sBACI;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAvEuBX,Q","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\n\nexport default function Tutorial() {\n    const rawRows = [\n        [\n            {value:true},\n            {value:true},\n            {value:true},\n            {value:true},\n            {value:true},\n        ],\n        [\n            {value:true},\n            {value:false},\n            {value:false},\n            {value:false},\n            {value:false},\n        ],\n        [\n            {value:true},\n            {value:false},\n            {value:false},\n            {value:false},\n            {value:false},\n        ],\n        [\n            {value:true},\n            {value:false},\n            {value:false},\n            {value:false},\n            {value:false},\n        ], \n        [\n            {value:true},\n            {value:true},\n            {value:true},\n            {value:true},\n            {value:true},\n        ]\n    ];\n\n    // const rawRows = [\n    //     [true, true, true, true, true],\n    //     [true, false, false, false, false],\n    //     [true, false, false, false, false],\n    //     [true, false, false, false, false],\n    //     [true, true, true, true, true],\n    // ];\n\n    const test = \"hello\";\n    console.log(test)\n\n    // const colNums = Columns(gameRows);\n\n    // const rowNums = Rows(gameRows);\n\n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}