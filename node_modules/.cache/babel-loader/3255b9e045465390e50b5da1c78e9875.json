{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/Board.js\";\nimport { nanoid } from \"nanoid\";\nimport Row from \"./components/Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(props) {\n  const rows = props.rows;\n  const row = new Array(props.length).fill(false);\n  const column = new Array(props.height).fill(row);\n  const board = column.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n\n  const winState = (rows, board) => {\n    rows.map(gameRow => {\n      board.map(boardRow => {\n        if (boardRow.state === gameRow.state) {\n          return console.log(\"success!\");\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [console.log(rows), board, winState(rows, board)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/Board.js"],"names":["nanoid","Row","Board","props","rows","row","Array","length","fill","column","height","board","map","winState","gameRow","boardRow","state","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,KAAK,CAACI,MAAhB,EAAwBC,IAAxB,CAA6B,KAA7B,CAAZ;AACA,QAAMC,MAAM,GAAG,IAAIH,KAAJ,CAAUH,KAAK,CAACO,MAAhB,EAAwBF,IAAxB,CAA6BH,GAA7B,CAAf;AAEA,QAAMM,KAAK,GAAGF,MAAM,CAACG,GAAP,CAAWP,GAAG,IAAI;AAC5B,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA;AADT,OAES,SAAOL,MAAM,EAFtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPa,CAAd;;AASA,QAAMa,QAAQ,GAAG,CAACT,IAAD,EAAOO,KAAP,KAAiB;AAC9BP,IAAAA,IAAI,CAACQ,GAAL,CAASE,OAAO,IAAE;AACdH,MAAAA,KAAK,CAACC,GAAN,CAAUG,QAAQ,IAAI;AAClB,YAAGA,QAAQ,CAACC,KAAT,KAAmBF,OAAO,CAACE,KAA9B,EAAqC;AACjC,iBAAOC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAP;AACH;AACJ,OAJD;AAKH,KAND;AAOH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACKD,OAAO,CAACC,GAAR,CAAYd,IAAZ,CADL,EAEKO,KAFL,EAGKE,QAAQ,CAACT,IAAD,EAAOO,KAAP,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KA/BuBT,K","sourcesContent":["import { nanoid } from \"nanoid\";\nimport Row from \"./components/Row\";\n\nexport default function Board(props) {\n    const rows = props.rows;\n    const row = new Array(props.length).fill(false);\n    const column = new Array(props.height).fill(row);\n\n    const board = column.map(row => {\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const winState = (rows, board) => {\n        rows.map(gameRow=>{\n            board.map(boardRow => {\n                if(boardRow.state === gameRow.state) {\n                    return console.log(\"success!\");\n                }\n            });\n        });\n    }\n\n    return (\n        <div className=\"board\">\n            {console.log(rows)}\n            {board}\n            {winState(rows, board)}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}