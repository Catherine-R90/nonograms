{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  const row1 = [{\n    id: \"row-\" + nanoid()\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }];\n  const row2 = [{\n    id: \"row-\" + nanoid()\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }];\n  const row3 = [{\n    id: \"row-\" + nanoid()\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }];\n  const row4 = [{\n    id: \"row-\" + nanoid()\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: false,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }];\n  const row5 = [{\n    id: \"row-\" + nanoid()\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }, {\n    row: {\n      value: true,\n      id: nanoid(),\n      key: nanoid()\n    }\n  }];\n  const gameRows = [row1, row2, row3, row4, row5]; // const gameRows = rows.map(row=>{\n  //     return Object.assign({id:\"row-\"+nanoid()}, row);\n  // });\n\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row.row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    length: row1.length,\n    height: gameRows.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [board, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level\",\n      children: [tutorial, console.log(\"game rows: \"), console.log(gameRows.forEach(row => row.row))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Tutorial","row1","id","row","value","key","row2","row3","row4","row5","gameRows","tutorial","map","board","length","console","log","forEach"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\n\nexport default function Tutorial() {\n    const row1 = [\n        {id:\"row-\"+nanoid()},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n    ];\n    const row2 = [\n        {id:\"row-\"+nanoid()},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}},  \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n    ];\n    const row3 = [\n        {id:\"row-\"+nanoid()},\n        {row:{value:true, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}},  \n        {row:{value:false, id:nanoid(), key:nanoid()}},\n    ];\n    const row4 = [\n        {id:\"row-\"+nanoid()},\n        {row:{value:true, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}}, \n        {row:{value:false, id:nanoid(), key:nanoid()}},  \n        {row:{value:false, id:nanoid(), key:nanoid()}},\n    ];\n    const row5 = [\n        {id:\"row-\"+nanoid()},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n        {row:{value:true, id:nanoid(), key:nanoid()}},\n    ];\n\n    const gameRows = [row1, row2, row3, row4, row5];\n\n    // const gameRows = rows.map(row=>{\n    //     return Object.assign({id:\"row-\"+nanoid()}, row);\n    // });\n    \n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row.row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const board = <Board gameRows={gameRows} length={row1.length} height={gameRows.length} />\n    \n    return (\n        <div>\n            {board}           \n            <div className='level'>\n                {tutorial}\n                {console.log(\"game rows: \")}\n                {console.log(gameRows.forEach(row => row.row))}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}