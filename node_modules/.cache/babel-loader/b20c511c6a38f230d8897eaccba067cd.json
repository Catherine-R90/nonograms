{"ast":null,"code":"import { nanoid } from \"nanoid\";\nexport default function RowObject(rawRows) {\n  const gameRows = rawRows.map(rawRow => {\n    const gRow = [];\n\n    for (let i = 1; i <= rawRows.length; i++) {\n      rawRow.map(row => {\n        row.map(square => {\n          if (square === true) {\n            return gRow.push({\n              value: true,\n              id: \"square-\" + nanoid(),\n              key: nanoid(),\n              row: i\n            });\n          } else {\n            return gRow.push({\n              value: false,\n              id: \"square-\" + nanoid(),\n              key: nanoid(),\n              row: i\n            });\n          }\n        });\n      });\n    }\n\n    return gRow;\n  });\n  console.log(gameRows);\n  return gameRows;\n}\n_c = RowObject;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowObject\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/RowObject.js"],"names":["nanoid","RowObject","rawRows","gameRows","map","rawRow","gRow","i","length","row","square","push","value","id","key","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,SAAT,CAAoBC,OAApB,EAA6B;AACxC,QAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAE;AACjC,UAAMC,IAAI,GAAG,EAAb;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIL,OAAO,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCF,MAAAA,MAAM,CAACD,GAAP,CAAWK,GAAG,IAAE;AACZA,QAAAA,GAAG,CAACL,GAAJ,CAAQM,MAAM,IAAE;AACZ,cAAGA,MAAM,KAAK,IAAd,EAAoB;AAChB,mBAAOJ,IAAI,CAACK,IAAL,CAAU;AAACC,cAAAA,KAAK,EAAC,IAAP;AAAaC,cAAAA,EAAE,EAAC,YAAUb,MAAM,EAAhC;AAAoCc,cAAAA,GAAG,EAACd,MAAM,EAA9C;AAAkDS,cAAAA,GAAG,EAACF;AAAtD,aAAV,CAAP;AACH,WAFD,MAEO;AACH,mBAAOD,IAAI,CAACK,IAAL,CAAU;AAACC,cAAAA,KAAK,EAAC,KAAP;AAAcC,cAAAA,EAAE,EAAC,YAAUb,MAAM,EAAjC;AAAqCc,cAAAA,GAAG,EAACd,MAAM,EAA/C;AAAmDS,cAAAA,GAAG,EAACF;AAAvD,aAAV,CAAP;AACH;AACJ,SAND;AAOH,OARD;AASH;;AAED,WAAOD,IAAP;AACH,GAfgB,CAAjB;AAgBAS,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AAEA,SAAOA,QAAP;AACH;KApBuBF,S","sourcesContent":["import { nanoid } from \"nanoid\";\n\nexport default function RowObject (rawRows) {\n    const gameRows = rawRows.map(rawRow=>{\n        const gRow = [];\n        for(let i = 1; i <= rawRows.length; i++) {\n            rawRow.map(row=>{\n                row.map(square=>{\n                    if(square === true) {\n                        return gRow.push({value:true, id:\"square-\"+nanoid(), key:nanoid(), row:i})\n                    } else {\n                        return gRow.push({value:false, id:\"square-\"+nanoid(), key:nanoid(), row:i})\n                    }\n                })\n            })\n        }\n        \n        return gRow;\n    });\n    console.log(gameRows);       \n\n    return gameRows;\n}"]},"metadata":{},"sourceType":"module"}