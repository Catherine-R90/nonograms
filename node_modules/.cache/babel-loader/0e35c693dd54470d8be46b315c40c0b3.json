{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Level1.js\";\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level1() {\n  const row1 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row2 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row3 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row4 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row5 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row6 = [{\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, false];\n  const row7 = [false, false, true, false, false, false, true, false, true, false];\n  const row8 = [false, false, true, false, false, false, true, true, true, false];\n  const row9 = [false, false, true, true, true, true, true, false, false, false];\n  const row10 = [true, true, true, true, true, true, true, true, true, true];\n  const rows = [row1, row2, row3, row4, row5, row6, row7, row8, row9, row10];\n  const level1 = rows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level\",\n    children: level1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_c = Level1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level1\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Level1.js"],"names":["React","nanoid","Row","Level1","row1","value","id","key","row2","row3","row4","row5","row6","row7","row8","row9","row10","rows","level1","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\n\nexport default function Level1() {\n    const row1 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n    ];\n    const row2 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n    ];\n    const row3 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}\n    ];\n    const row4 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}\n    ];\n    const row5 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}\n    ];\n    const row6 = [\n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value: true, id:\"square-\"+nanoid(), key:nanoid()}, false\n    ];\n    const row7 = [false, false, true, false, false, false, true, false, true, false];\n    const row8 = [false, false, true, false, false, false, true, true, true, false];\n    const row9 = [false, false, true, true, true, true, true, false, false, false];\n    const row10 = [true, true, true, true, true, true, true, true, true, true];\n\n    const rows = [row1, row2, row3, row4, row5, row6, row7, row8, row9, row10];\n\n    const level1 = rows.map(row=>{\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    return (\n        <div className='level'>\n            {level1}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}