{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  _s();\n\n  // const gameRows = props.gameRows;\n  const [gameRows, setGameRows] = useState(props.gameRows); // const row = rawRow.map(square => {\n  //     return (\n  //         <Square \n  //             value={square}\n  //             key={'square'+nanoid()}\n  //         />\n  //     );\n  // });\n\n  if (gameRows) {\n    const row = gameRows.map(square => {\n      if (square == true) {\n        return /*#__PURE__*/_jsxDEV(TrueSquare, {\n          value: square\n        }, \"square-\" + nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FalseSquare, {\n          value: square\n        }, \"square-\" + nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: [console.log(`Row game rows: ${gameRows}`), row]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"ClKmcqQhVu+qQ91IRHsEiBUFWck=\");\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","FalseSquare","Square","TrueSquare","Row","props","gameRows","setGameRows","row","map","square","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACK,KAAK,CAACC,QAAP,CAAxC,CAF+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAGA,QAAH,EAAa;AACT,UAAME,GAAG,GAAGF,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;AAC/B,UAAGA,MAAM,IAAI,IAAb,EAAmB;AACf,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB,WAAgC,YAAUX,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEW;AAApB,WAAiC,YAAUX,MAAM,EAAjD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ,KANW,CAAZ;AAOH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACKY,OAAO,CAACC,GAAR,CAAa,kBAAiBN,QAAS,EAAvC,CADL,EAEKE,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA5BuBJ,G;;KAAAA,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\nimport TrueSquare from \"./TrueSquare\";\n\nexport default function Row(props) {\n    // const gameRows = props.gameRows;\n    const [gameRows, setGameRows] = useState(props.gameRows);\n    // const row = rawRow.map(square => {\n    //     return (\n    //         <Square \n    //             value={square}\n    //             key={'square'+nanoid()}\n    //         />\n    //     );\n    // });\n\n    if(gameRows) {\n        const row = gameRows.map(square => {\n            if(square == true) {\n                return <TrueSquare value={square} key={\"square-\"+nanoid()} />\n            } else {\n                return <FalseSquare value={square} key={\"square-\"+nanoid()} />\n            }\n        })\n    }\n\n    return (\n        <div className=\"board-row\">\n            {console.log(`Row game rows: ${gameRows}`)}\n            {row}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}