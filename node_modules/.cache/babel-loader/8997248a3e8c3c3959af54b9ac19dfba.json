{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  const row1 = [// {id:\"row-\"+nanoid()},\n  {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row2 = [// {id:\"row-\"+nanoid()},\n  {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row3 = [// {id:\"row-\"+nanoid()},\n  {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row4 = [// {id:\"row-\"+nanoid()},\n  {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const row5 = [// {id:\"row-\"+nanoid()},\n  {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid()\n  }];\n  const rows = [row1, row2, row3, row4, row5];\n  const gameRows = rows.map(row => {\n    return Object.assign({\n      id: \"gameRow-\" + nanoid()\n    }, row);\n  });\n  const tutorial = gameRows.map(row => {\n    for (var key in row) {\n      if (key != 'id') {\n        return (// <Row \n          //     row={row}\n          //     id={row.id}\n          //     key={'row-'+nanoid()}\n          // />\n          console.log(row)\n        );\n      }\n    }\n  }); // const tutorial = rows.map(row => {\n  //     for(let i = 0; i < gameRows.length; i++) {\n  //         console.log(\"game row id: \" +gameRows[i].id)\n  //         for(let j = 0; j < gameRows[i].length; j++) {\n  //             console.log(\"square? id: \"+ gameRows[i[j]].id)\n  //         }\n  //     }\n  // });\n  // return (\n  //     <Row \n  //         row={row}\n  //         id={gameRows[i].id}\n  //         key={'row-'+nanoid()}\n  //     />\n  // );\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    length: row1.length,\n    height: gameRows.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [board, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level\",\n      children: tutorial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Tutorial","row1","value","id","key","row2","row3","row4","row5","rows","gameRows","map","row","Object","assign","tutorial","console","log","board","length"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\n\nexport default function Tutorial() {\n    const row1 = [\n        // {id:\"row-\"+nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row2 = [\n        // {id:\"row-\"+nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n    ];\n    const row3 = [\n        // {id:\"row-\"+nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row4 = [\n        // {id:\"row-\"+nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()}, \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},  \n        {value:false, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n    const row5 = [\n        // {id:\"row-\"+nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid()},\n    ];\n\n    const rows = [row1, row2, row3, row4, row5];\n\n    const gameRows = rows.map(row=>{\n        return Object.assign({id:\"gameRow-\"+nanoid()}, row);\n    });\n\n    const tutorial = gameRows.map(row=>{\n        for(var key in row) {\n            if(key != 'id') {\n                return (\n                    // <Row \n                    //     row={row}\n                    //     id={row.id}\n                    //     key={'row-'+nanoid()}\n                    // />\n                    console.log(row)\n                );\n            }\n        }\n    })\n    \n    // const tutorial = rows.map(row => {\n    //     for(let i = 0; i < gameRows.length; i++) {\n    //         console.log(\"game row id: \" +gameRows[i].id)\n    //         for(let j = 0; j < gameRows[i].length; j++) {\n    //             console.log(\"square? id: \"+ gameRows[i[j]].id)\n    //         }\n    //     }\n    // });\n\n    // return (\n    //     <Row \n    //         row={row}\n    //         id={gameRows[i].id}\n    //         key={'row-'+nanoid()}\n    //     />\n    // );\n\n    const board = <Board gameRows={gameRows} length={row1.length} height={gameRows.length} />\n    \n    return (\n        <div>\n            {board}           \n            <div className='level'>\n                {tutorial}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}