{"ast":null,"code":"import { nanoid } from \"nanoid\";\nexport default function RowObject(rawRows) {\n  const gameRows = [];\n  rawRows.map((rawRow, index) => {\n    const rowNum = index + 1;\n    const row = [];\n    rawRow.map((square, index) => {\n      const colNum = index + 1;\n\n      if (square === true) {\n        row.push({\n          value: true,\n          id: \"square-\" + nanoid(),\n          rowI: rowNum,\n          colindex: colNum\n        });\n      } else {\n        row.push({\n          value: false,\n          id: \"square-\" + nanoid(),\n          rowI: rowNum,\n          colindex: colNum\n        });\n      }\n    });\n    gameRows.push(row);\n  });\n  return gameRows;\n}\n_c = RowObject;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowObject\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/RowObject.js"],"names":["nanoid","RowObject","rawRows","gameRows","map","rawRow","index","rowNum","row","square","colNum","push","value","id","rowI","colindex"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,SAAT,CAAoBC,OAApB,EAA6B;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAiB;AACzB,UAAMC,MAAM,GAAGD,KAAK,GAAC,CAArB;AACA,UAAME,GAAG,GAAG,EAAZ;AACAH,IAAAA,MAAM,CAACD,GAAP,CAAW,CAACK,MAAD,EAASH,KAAT,KAAiB;AACxB,YAAMI,MAAM,GAAGJ,KAAK,GAAC,CAArB;;AACA,UAAGG,MAAM,KAAI,IAAb,EAAmB;AACfD,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAACC,UAAAA,KAAK,EAAC,IAAP;AAAaC,UAAAA,EAAE,EAAC,YAAUb,MAAM,EAAhC;AAAoCc,UAAAA,IAAI,EAACP,MAAzC;AAAiDQ,UAAAA,QAAQ,EAACL;AAA1D,SAAT;AACH,OAFD,MAEO;AACHF,QAAAA,GAAG,CAACG,IAAJ,CAAS;AAACC,UAAAA,KAAK,EAAC,KAAP;AAAcC,UAAAA,EAAE,EAAC,YAAUb,MAAM,EAAjC;AAAqCc,UAAAA,IAAI,EAACP,MAA1C;AAAkDQ,UAAAA,QAAQ,EAACL;AAA3D,SAAT;AACH;AACJ,KAPD;AAQAP,IAAAA,QAAQ,CAACQ,IAAT,CAAcH,GAAd;AACH,GAZD;AAcA,SAAOL,QAAP;AACH;KAjBuBF,S","sourcesContent":["import { nanoid } from \"nanoid\";\n\nexport default function RowObject (rawRows) {\n    const gameRows = [];\n    rawRows.map((rawRow, index)=>{\n        const rowNum = index+1;\n        const row = [];\n        rawRow.map((square, index)=>{\n            const colNum = index+1;\n            if(square=== true) {\n                row.push({value:true, id:\"square-\"+nanoid(), rowI:rowNum, colindex:colNum},);\n            } else {\n                row.push({value:false, id:\"square-\"+nanoid(), rowI:rowNum, colindex:colNum});\n            }\n        })\n        gameRows.push(row);\n    });\n    \n    return gameRows;\n}"]},"metadata":{},"sourceType":"module"}