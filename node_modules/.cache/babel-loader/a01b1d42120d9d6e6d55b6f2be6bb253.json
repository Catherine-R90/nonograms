{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(props) {\n  _s();\n\n  const [gameRows, setGameRows] = useState(props.gameRows);\n  const [boardRows, setBoardRows] = useState();\n  const rowContent = {\n    value: false\n  };\n  const rawRow = new Array(props.length).fill(rowContent);\n  const rows = rawRow.map(row => {\n    return Object.assign({\n      id: \"square-\" + nanoid()\n    }, row);\n  });\n  const column = new Array(props.height).fill(rows);\n  const board = column.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      gameRows: props.gameRows\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  });\n  setBoardRows(rows); // const winState = (gameRows, rows) => {\n  //     gameRows.map(gameRow=>{\n  //         rows.map(boardRow => {\n  //             if(gameRow.value === boardRow.value) {\n  //                 console.log(\"success!\")\n  //             }\n  //         });\n  //         return;\n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"48w9eNhZr313r1XQYkie73oxIqA=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Board.js"],"names":["nanoid","useState","Row","Board","props","gameRows","setGameRows","boardRows","setBoardRows","rowContent","value","rawRow","Array","length","fill","rows","map","row","Object","assign","id","column","height","board"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,KAAK,CAACC,QAAP,CAAxC;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AAEA,QAAMQ,UAAU,GAAG;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAnB;AACA,QAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUR,KAAK,CAACS,MAAhB,EAAwBC,IAAxB,CAA6BL,UAA7B,CAAf;AACA,QAAMM,IAAI,GAAGJ,MAAM,CAACK,GAAP,CAAWC,GAAG,IAAG;AAC1B,WAAOC,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAC,YAAUpB,MAAM;AAApB,KAAd,EAAuCiB,GAAvC,CAAP;AACH,GAFY,CAAb;AAGA,QAAMI,MAAM,GAAG,IAAIT,KAAJ,CAAUR,KAAK,CAACkB,MAAhB,EAAwBR,IAAxB,CAA6BC,IAA7B,CAAf;AAEA,QAAMQ,KAAK,GAAGF,MAAM,CAACL,GAAP,CAAWC,GAAG,IAAI;AAC5B,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAGI,MAAA,QAAQ,EAAEb,KAAK,CAACC;AAHpB,OAES,SAAOL,MAAM,EAFtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARa,CAAd;AAUAQ,EAAAA,YAAY,CAACO,IAAD,CAAZ,CArBiC,CAuBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKQ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvCuBpB,K;;KAAAA,K","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport Row from \"./Row\";\n\nexport default function Board(props) {\n    const [gameRows, setGameRows] = useState(props.gameRows);\n    const [boardRows, setBoardRows] = useState();\n\n    const rowContent = {value:false};\n    const rawRow = new Array(props.length).fill(rowContent);\n    const rows = rawRow.map(row =>{\n        return Object.assign({id:\"square-\"+nanoid()}, row)    \n    });\n    const column = new Array(props.height).fill(rows);\n\n    const board = column.map(row => {\n        return (\n            <Row \n                row={row}\n                key={'row-'+nanoid()}\n                gameRows={props.gameRows}\n            />\n        );\n    });\n\n    setBoardRows(rows);\n\n    // const winState = (gameRows, rows) => {\n    //     gameRows.map(gameRow=>{\n    //         rows.map(boardRow => {\n    //             if(gameRow.value === boardRow.value) {\n    //                 console.log(\"success!\")\n    //             }\n    //         });\n    //         return;\n    //     });\n    // }\n\n    return (\n        <div className=\"board\">\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}