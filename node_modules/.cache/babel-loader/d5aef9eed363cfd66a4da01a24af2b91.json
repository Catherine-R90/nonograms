{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  // const [rowsComplete, setRowsComplete] = useState(false);\n  // const rawRows = [\n  //     [true, true, true, true, true],\n  //     [true, false, false, false, false],\n  //     [true, false, false, false, false],\n  //     [true, false, false, false, false],\n  //     [true, true, true, true, true],\n  // ];\n  // const gameRows = RowObject(rawRows);\n  const gameRows = [[{\n    value: true,\n    id: \"square-tut1\",\n    key: nanoid(),\n    row: 1,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-tut2\",\n    key: nanoid(),\n    row: 1,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-tut3\",\n    key: nanoid(),\n    row: 1,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-tut4\",\n    key: nanoid(),\n    row: 1,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-tut5\",\n    key: nanoid(),\n    row: 1,\n    col: 5\n  }], [{\n    value: true,\n    id: \"square-tut6\",\n    key: nanoid(),\n    row: 2,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut7\",\n    key: nanoid(),\n    row: 2,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut8\",\n    key: nanoid(),\n    row: 2,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut9\",\n    key: nanoid(),\n    row: 2,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut10\",\n    key: nanoid(),\n    row: 2,\n    col: 5\n  }], [{\n    value: true,\n    id: \"square-tut11\",\n    key: nanoid(),\n    row: 3,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut12\",\n    key: nanoid(),\n    row: 3,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut13\",\n    key: nanoid(),\n    row: 3,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut14\",\n    key: nanoid(),\n    row: 3,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut15\",\n    key: nanoid(),\n    row: 3,\n    col: 5\n  }], [{\n    value: true,\n    id: \"square-tut16\",\n    key: nanoid(),\n    row: 4,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-tut17\",\n    key: nanoid(),\n    row: 4,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-tut18\",\n    key: nanoid(),\n    row: 4,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-tut19\",\n    key: nanoid(),\n    row: 4,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-tut20\",\n    key: nanoid(),\n    row: 4,\n    col: 5\n  }], [{\n    value: true,\n    id: \"square-tut21\",\n    key: nanoid(),\n    row: 5,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-tut22\",\n    key: nanoid(),\n    row: 5,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-tut23\",\n    key: nanoid(),\n    row: 5,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-tut24\",\n    key: nanoid(),\n    row: 5,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-tut25\",\n    key: nanoid(),\n    row: 5,\n    col: 5\n  }]];\n  const colNums = Columns(gameRows);\n  const rowNums = Rows(gameRows);\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: console.log(gameRows)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","useState","Row","Board","Columns","Rows","RowObject","Tutorial","gameRows","value","id","key","row","col","colNums","rowNums","tutorial","map","board","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAMC,QAAQ,GAAG,CACb,CACI;AAACC,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GADJ,EAEI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GAFJ,EAGI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GAHJ,EAII;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GAJJ,EAKI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GALJ,CADa,EAQb,CACI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,aAAhB;AAA+BC,IAAAA,GAAG,EAACX,MAAM,EAAzC;AAA6CY,IAAAA,GAAG,EAAC,CAAjD;AAAoDC,IAAAA,GAAG,EAAC;AAAxD,GADJ,EAEI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,aAAjB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAFJ,EAGI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,aAAjB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAHJ,EAII;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,aAAjB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAJJ,EAKI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GALJ,CARa,EAeb,CACI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GADJ,EAEI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAFJ,EAGI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAHJ,EAII;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAJJ,EAKI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GALJ,CAfa,EAsBb,CACI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GADJ,EAEI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAFJ,EAGI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAHJ,EAII;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GAJJ,EAKI;AAACJ,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,EAAE,EAAC,cAAjB;AAAiCC,IAAAA,GAAG,EAACX,MAAM,EAA3C;AAA+CY,IAAAA,GAAG,EAAC,CAAnD;AAAsDC,IAAAA,GAAG,EAAC;AAA1D,GALJ,CAtBa,EA6Bb,CACI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GADJ,EAEI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAFJ,EAGI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAHJ,EAII;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GAJJ,EAKI;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,EAAE,EAAC,cAAhB;AAAgCC,IAAAA,GAAG,EAACX,MAAM,EAA1C;AAA8CY,IAAAA,GAAG,EAAC,CAAlD;AAAqDC,IAAAA,GAAG,EAAC;AAAzD,GALJ,CA7Ba,CAAjB;AAsCA,QAAMC,OAAO,GAAGV,OAAO,CAACI,QAAD,CAAvB;AAEA,QAAMO,OAAO,GAAGV,IAAI,CAACG,QAAD,CAApB;AAEA,QAAMQ,QAAQ,GAAGR,QAAQ,CAACS,GAAT,CAAaL,GAAG,IAAI;AACjC,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,EAAE,EAAEA,GAAG,CAACF;AAFZ,OAGS,SAAOV,MAAM,EAHtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARgB,CAAjB;;AAUA,QAAMkB,KAAK,gBAAG,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEV,QAAjB;AAA2B,IAAA,OAAO,EAAEO,OAApC;AAA6C,IAAA,OAAO,EAAED;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,sBACI;AAAA,cAEKK,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAzEuBD,Q","sourcesContent":["import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\n\nexport default function Tutorial() {\n    // const [rowsComplete, setRowsComplete] = useState(false);\n\n    // const rawRows = [\n    //     [true, true, true, true, true],\n    //     [true, false, false, false, false],\n    //     [true, false, false, false, false],\n    //     [true, false, false, false, false],\n    //     [true, true, true, true, true],\n    // ];\n\n    // const gameRows = RowObject(rawRows);\n\n    const gameRows = [\n        [\n            {value:true, id:\"square-tut1\", key:nanoid(), row:1, col:1},\n            {value:true, id:\"square-tut2\", key:nanoid(), row:1, col:2},\n            {value:true, id:\"square-tut3\", key:nanoid(), row:1, col:3},\n            {value:true, id:\"square-tut4\", key:nanoid(), row:1, col:4},\n            {value:true, id:\"square-tut5\", key:nanoid(), row:1, col:5},\n        ],\n        [\n            {value:true, id:\"square-tut6\", key:nanoid(), row:2, col:1},\n            {value:false, id:\"square-tut7\", key:nanoid(), row:2, col:2},\n            {value:false, id:\"square-tut8\", key:nanoid(), row:2, col:3},\n            {value:false, id:\"square-tut9\", key:nanoid(), row:2, col:4},\n            {value:false, id:\"square-tut10\", key:nanoid(), row:2, col:5},\n        ],\n        [\n            {value:true, id:\"square-tut11\", key:nanoid(), row:3, col:1},\n            {value:false, id:\"square-tut12\", key:nanoid(), row:3, col:2},\n            {value:false, id:\"square-tut13\", key:nanoid(), row:3, col:3},\n            {value:false, id:\"square-tut14\", key:nanoid(), row:3, col:4},\n            {value:false, id:\"square-tut15\", key:nanoid(), row:3, col:5},\n        ],\n        [\n            {value:true, id:\"square-tut16\", key:nanoid(), row:4, col:1},\n            {value:false, id:\"square-tut17\", key:nanoid(), row:4, col:2},\n            {value:false, id:\"square-tut18\", key:nanoid(), row:4, col:3},\n            {value:false, id:\"square-tut19\", key:nanoid(), row:4, col:4},\n            {value:false, id:\"square-tut20\", key:nanoid(), row:4, col:5},\n        ], \n        [\n            {value:true, id:\"square-tut21\", key:nanoid(), row:5, col:1},\n            {value:true, id:\"square-tut22\", key:nanoid(), row:5, col:2},\n            {value:true, id:\"square-tut23\", key:nanoid(), row:5, col:3},\n            {value:true, id:\"square-tut24\", key:nanoid(), row:5, col:4},\n            {value:true, id:\"square-tut25\", key:nanoid(), row:5, col:5},\n        ]\n    ];\n\n    const colNums = Columns(gameRows);\n\n    const rowNums = Rows(gameRows);\n\n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {/* {rowsComplete ? board : null } */}\n            {console.log(gameRows)}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}