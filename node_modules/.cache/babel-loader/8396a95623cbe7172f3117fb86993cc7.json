{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\";\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport '../ColAndRowHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  const row1 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 1,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 1,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 1,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 1,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 1,\n    col: 5\n  }];\n  const row2 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 2,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 2,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 2,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 2,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 2,\n    col: 5\n  }];\n  const row3 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 3,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 3,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 3,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 3,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 3,\n    col: 5\n  }];\n  const row4 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 4,\n    col: 1\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 4,\n    col: 2\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 4,\n    col: 3\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 4,\n    col: 4\n  }, {\n    value: false,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 4,\n    col: 5\n  }];\n  const row5 = [{\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 5,\n    col: 1\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 5,\n    col: 2\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 5,\n    col: 3\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 5,\n    col: 4\n  }, {\n    value: true,\n    id: \"square-\" + nanoid(),\n    key: nanoid(),\n    row: 5,\n    col: 5\n  }];\n  const gameRows = [row1, row2, row3, row4, row5];\n\n  const nums = /*#__PURE__*/_jsxDEV(ColAndRowHelpers, {\n    gameRows: gameRows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 18\n  }, this);\n\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Tutorial","row1","value","id","key","row","col","row2","row3","row4","row5","gameRows","nums","tutorial","map","board","rowNums","colNums"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport '../ColAndRowHelpers';\n\nexport default function Tutorial() {\n    const row1 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:1, col:1},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:1, col:2},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:1, col:3},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:1, col:4},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:1, col:5},\n    ];\n    const row2 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:2, col:1},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:2, col:2},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:2, col:3},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:2, col:4},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:2, col:5},\n    ];\n    const row3 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:3, col:1},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:3, col:2},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:3, col:3},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:3, col:4},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:3, col:5},\n    ];\n    const row4 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:4, col:1},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:4, col:2},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:4, col:3},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:4, col:4},\n        {value:false, id:\"square-\"+nanoid(), key:nanoid(), row:4, col:5},\n    ];\n    const row5 = [\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:5, col:1},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:5, col:2},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:5, col:3},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:5, col:4},\n        {value:true, id:\"square-\"+nanoid(), key:nanoid(), row:5, col:5},\n    ];\n\n    const gameRows = [row1, row2, row3, row4, row5];    \n\n    const nums = <ColAndRowHelpers gameRows={gameRows} />\n    \n\n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        )\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}