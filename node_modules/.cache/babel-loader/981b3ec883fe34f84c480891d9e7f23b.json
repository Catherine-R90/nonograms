{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  _s();\n\n  // const row1 = [\n  //     {value:true, id:\"square-tut1\", key:nanoid(), row:1, col:1},\n  //     {value:true, id:\"square-tut2\", key:nanoid(), row:1, col:2},\n  //     {value:true, id:\"square-tut3\", key:nanoid(), row:1, col:3},\n  //     {value:true, id:\"square-tut4\", key:nanoid(), row:1, col:4},\n  //     {value:true, id:\"square-tut5\", key:nanoid(), row:1, col:5},\n  // ];\n  // const row2 = [\n  //     {value:true, id:\"square-tut6\", key:nanoid(), row:2, col:1},\n  //     {value:false, id:\"square-tut7\", key:nanoid(), row:2, col:2},\n  //     {value:false, id:\"square-tut8\", key:nanoid(), row:2, col:3},\n  //     {value:false, id:\"square-tut9\", key:nanoid(), row:2, col:4},\n  //     {value:false, id:\"square-tut10\", key:nanoid(), row:2, col:5},\n  // ];\n  // const row3 = [\n  //     {value:true, id:\"square-tut11\", key:nanoid(), row:3, col:1},\n  //     {value:false, id:\"square-tut12\", key:nanoid(), row:3, col:2},\n  //     {value:false, id:\"square-tut13\", key:nanoid(), row:3, col:3},\n  //     {value:false, id:\"square-tut14\", key:nanoid(), row:3, col:4},\n  //     {value:false, id:\"square-tut15\", key:nanoid(), row:3, col:5},\n  // ];\n  // const row4 = [\n  //     {value:true, id:\"square-tut16\", key:nanoid(), row:4, col:1},\n  //     {value:false, id:\"square-tut17\", key:nanoid(), row:4, col:2},\n  //     {value:false, id:\"square-tut18\", key:nanoid(), row:4, col:3},\n  //     {value:false, id:\"square-tut19\", key:nanoid(), row:4, col:4},\n  //     {value:false, id:\"square-tut20\", key:nanoid(), row:4, col:5},\n  // ];\n  // const row5 = [\n  //     {value:true, id:\"square-tut21\", key:nanoid(), row:5, col:1},\n  //     {value:true, id:\"square-tut22\", key:nanoid(), row:5, col:2},\n  //     {value:true, id:\"square-tut23\", key:nanoid(), row:5, col:3},\n  //     {value:true, id:\"square-tut24\", key:nanoid(), row:5, col:4},\n  //     {value:true, id:\"square-tut25\", key:nanoid(), row:5, col:5},\n  // ];\n  const [rawRows, setRawRows] = useState([[true, true, true, true, true], [true, false, false, false, false], [true, false, false, false, false], [true, false, false, false, false], [true, true, true, true, true]]);\n  console.log(rawRows);\n  const gameRows = RowObject(rawRows);\n  const colNums = Columns(gameRows);\n  const rowNums = Rows(gameRows);\n  const tutorial = gameRows.map(row => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      id: row.id\n    }, 'row-' + nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  });\n\n  const board = /*#__PURE__*/_jsxDEV(Board, {\n    gameRows: gameRows,\n    rowNums: rowNums,\n    colNums: colNums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tutorial, \"O0LiQDel7tvORaAq39QpV/sfnww=\");\n\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","Row","Board","Columns","Rows","RowObject","useState","Tutorial","rawRows","setRawRows","console","log","gameRows","colNums","rowNums","tutorial","map","row","id","board"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAClC,CACI,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CADJ,EAEI,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAFJ,EAGI,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAHJ,EAII,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAJJ,EAKI,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CALJ,CADkC,CAAtC;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,QAAMI,QAAQ,GAAGP,SAAS,CAACG,OAAD,CAA1B;AAEA,QAAMK,OAAO,GAAGV,OAAO,CAACS,QAAD,CAAvB;AAEA,QAAME,OAAO,GAAGV,IAAI,CAACQ,QAAD,CAApB;AAEA,QAAMG,QAAQ,GAAGH,QAAQ,CAACI,GAAT,CAAaC,GAAG,IAAI;AACjC,wBACI,QAAC,GAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,EAAE,EAAEA,GAAG,CAACC;AAFZ,OAGS,SAAOlB,MAAM,EAHtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARgB,CAAjB;;AAUA,QAAMmB,KAAK,gBAAG,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEP,QAAjB;AAA2B,IAAA,OAAO,EAAEE,OAApC;AAA6C,IAAA,OAAO,EAAED;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,sBACI;AAAA,cACKM;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxEuBZ,Q;;KAAAA,Q","sourcesContent":["import { nanoid } from 'nanoid';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport RowObject from '../Helpers/RowObject';\nimport { useState } from 'react';\n\nexport default function Tutorial() {\n    // const row1 = [\n    //     {value:true, id:\"square-tut1\", key:nanoid(), row:1, col:1},\n    //     {value:true, id:\"square-tut2\", key:nanoid(), row:1, col:2},\n    //     {value:true, id:\"square-tut3\", key:nanoid(), row:1, col:3},\n    //     {value:true, id:\"square-tut4\", key:nanoid(), row:1, col:4},\n    //     {value:true, id:\"square-tut5\", key:nanoid(), row:1, col:5},\n    // ];\n    // const row2 = [\n    //     {value:true, id:\"square-tut6\", key:nanoid(), row:2, col:1},\n    //     {value:false, id:\"square-tut7\", key:nanoid(), row:2, col:2},\n    //     {value:false, id:\"square-tut8\", key:nanoid(), row:2, col:3},\n    //     {value:false, id:\"square-tut9\", key:nanoid(), row:2, col:4},\n    //     {value:false, id:\"square-tut10\", key:nanoid(), row:2, col:5},\n    // ];\n    // const row3 = [\n    //     {value:true, id:\"square-tut11\", key:nanoid(), row:3, col:1},\n    //     {value:false, id:\"square-tut12\", key:nanoid(), row:3, col:2},\n    //     {value:false, id:\"square-tut13\", key:nanoid(), row:3, col:3},\n    //     {value:false, id:\"square-tut14\", key:nanoid(), row:3, col:4},\n    //     {value:false, id:\"square-tut15\", key:nanoid(), row:3, col:5},\n    // ];\n    // const row4 = [\n    //     {value:true, id:\"square-tut16\", key:nanoid(), row:4, col:1},\n    //     {value:false, id:\"square-tut17\", key:nanoid(), row:4, col:2},\n    //     {value:false, id:\"square-tut18\", key:nanoid(), row:4, col:3},\n    //     {value:false, id:\"square-tut19\", key:nanoid(), row:4, col:4},\n    //     {value:false, id:\"square-tut20\", key:nanoid(), row:4, col:5},\n    // ];\n    // const row5 = [\n    //     {value:true, id:\"square-tut21\", key:nanoid(), row:5, col:1},\n    //     {value:true, id:\"square-tut22\", key:nanoid(), row:5, col:2},\n    //     {value:true, id:\"square-tut23\", key:nanoid(), row:5, col:3},\n    //     {value:true, id:\"square-tut24\", key:nanoid(), row:5, col:4},\n    //     {value:true, id:\"square-tut25\", key:nanoid(), row:5, col:5},\n    // ];\n\n    const [rawRows, setRawRows] = useState(\n        [\n            [true, true, true, true, true],\n            [true, false, false, false, false],\n            [true, false, false, false, false],\n            [true, false, false, false, false],\n            [true, true, true, true, true],\n        ]\n    );\n\n    console.log(rawRows);\n\n    const gameRows = RowObject(rawRows);\n\n    const colNums = Columns(gameRows);\n\n    const rowNums = Rows(gameRows);\n\n    const tutorial = gameRows.map(row => {\n        return (\n            <Row \n                row={row}\n                id={row.id}\n                key={'row-'+nanoid()}\n            />\n        );\n    });\n\n    const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {board}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}