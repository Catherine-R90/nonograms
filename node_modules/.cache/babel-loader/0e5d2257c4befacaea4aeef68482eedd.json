{"ast":null,"code":"export default function CheckRow(gameRow, boardRow) {\n  // const gameVals = gameRow.map(square=>{\n  //     return square.value;\n  // })\n  // const boardVals = boardRow.map(square=>{\n  //     if(square.value === \"x-square\") {\n  //         return false;\n  //     } else {\n  //         return square.value;\n  //     }\n  // });\n  const gameVals = [];\n  const boardVals = [];\n  gameRows.map(gRow => {\n    boardRows.map(bRow => {\n      gRow.map(gSquare => {\n        bRow.map(bSquare => {\n          if (gSquare.row === bSquare.row) {\n            gameVals.push(gSquare.value);\n\n            if (bSquare.value === \"x-square\") {\n              boardVals.push(\"false\");\n            } else {\n              boardVals.push(bSquare.value);\n            }\n          }\n        });\n      });\n    });\n  });\n  const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n  const length = gameVals.length === boardVals.length;\n  const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n  if (isArray === true && length === true && matchVals === true) {\n    // return true;\n    const updatedRow = boardRow.map(square => {\n      if (square.value === false) {\n        return { ...square,\n          value: \"x-square\"\n        };\n      }\n\n      return square;\n    });\n    return updatedRow;\n  }\n}\n_c = CheckRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRow\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/CheckRow.js"],"names":["CheckRow","gameRow","boardRow","gameVals","boardVals","gameRows","map","gRow","boardRows","bRow","gSquare","bSquare","row","push","value","isArray","Array","length","matchVals","JSON","stringify","updatedRow","square"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqC;AAChD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAE,EAAhB;AACA,QAAMC,SAAS,GAAE,EAAjB;AAEAC,EAAAA,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAE;AACfC,IAAAA,SAAS,CAACF,GAAV,CAAcG,IAAI,IAAE;AAChBF,MAAAA,IAAI,CAACD,GAAL,CAASI,OAAO,IAAE;AACdD,QAAAA,IAAI,CAACH,GAAL,CAASK,OAAO,IAAE;AACd,cAAGD,OAAO,CAACE,GAAR,KAAgBD,OAAO,CAACC,GAA3B,EAAgC;AAC5BT,YAAAA,QAAQ,CAACU,IAAT,CAAcH,OAAO,CAACI,KAAtB;;AACA,gBAAGH,OAAO,CAACG,KAAR,KAAkB,UAArB,EAAiC;AAC7BV,cAAAA,SAAS,CAACS,IAAV,CAAe,OAAf;AACH,aAFD,MAEO;AACHT,cAAAA,SAAS,CAACS,IAAV,CAAeF,OAAO,CAACG,KAAvB;AACH;AACJ;AACJ,SATD;AAUH,OAXD;AAYH,KAbD;AAcH,GAfD;AAiBA,QAAMC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcZ,QAAd,KAA2Ba,KAAK,CAACD,OAAN,CAAcX,SAAd,CAA3C;AACA,QAAMa,MAAM,GAAGd,QAAQ,CAACc,MAAT,KAAoBb,SAAS,CAACa,MAA7C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAehB,SAAf,MAA8Be,IAAI,CAACC,SAAL,CAAejB,QAAf,CAAhD;;AAGA,MAAGY,OAAO,KAAK,IAAZ,IAAoBE,MAAM,KAAK,IAA/B,IAAuCC,SAAS,KAAK,IAAxD,EAA8D;AAC1D;AACA,UAAMG,UAAU,GAAGnB,QAAQ,CAACI,GAAT,CAAagB,MAAM,IAAE;AACpC,UAAGA,MAAM,CAACR,KAAP,KAAiB,KAApB,EAA2B;AACvB,eAAO,EAAC,GAAGQ,MAAJ;AAAYR,UAAAA,KAAK,EAAC;AAAlB,SAAP;AACH;;AACD,aAAOQ,MAAP;AACH,KALkB,CAAnB;AAMA,WAAOD,UAAP;AACH;AACJ;KAhDuBrB,Q","sourcesContent":["export default function CheckRow(gameRow, boardRow) {\n    // const gameVals = gameRow.map(square=>{\n    //     return square.value;\n    // })\n    \n    // const boardVals = boardRow.map(square=>{\n    //     if(square.value === \"x-square\") {\n    //         return false;\n    //     } else {\n    //         return square.value;\n    //     }\n    // });\n\n    const gameVals =[];\n    const boardVals =[];\n\n    gameRows.map(gRow=>{\n        boardRows.map(bRow=>{\n            gRow.map(gSquare=>{\n                bRow.map(bSquare=>{\n                    if(gSquare.row === bSquare.row) {\n                        gameVals.push(gSquare.value);\n                        if(bSquare.value === \"x-square\") {\n                            boardVals.push(\"false\");\n                        } else {\n                            boardVals.push(bSquare.value);\n                        }\n                    }\n                })\n            })\n        })\n    })\n\n    const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n    const length = gameVals.length === boardVals.length;\n    const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n    \n    if(isArray === true && length === true && matchVals === true) {\n        // return true;\n        const updatedRow = boardRow.map(square=>{\n            if(square.value === false) {\n                return {...square, value:\"x-square\"}\n            }\n            return square;\n        });\n        return updatedRow;\n    } \n}"]},"metadata":{},"sourceType":"module"}