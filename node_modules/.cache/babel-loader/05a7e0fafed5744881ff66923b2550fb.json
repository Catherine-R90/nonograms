{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/levels/Tutorial.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tutorial() {\n  _s();\n\n  const [rowsComplete, setRowsComplete] = useState(false);\n  const rawRows = [[true, true, true, true, true], [true, false, false, false, false], [true, false, false, false, false], [true, false, false, false, false], [true, true, true, true, true]];\n  const gameRows = RowObject(rawRows); // const colNums = Columns(gameRows);\n  // const rowNums = Rows(gameRows);\n  // const tutorial = gameRows.map(row => {\n  //     return (\n  //         <Row \n  //             row={row}\n  //             id={row.id}\n  //             key={'row-'+nanoid()}\n  //         />\n  //     );\n  // });\n  // const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rowsComplete ? board : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tutorial, \"HG/10qk80ywFpzmMxhwKrk47WVk=\");\n\n_c = Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/levels/Tutorial.js"],"names":["nanoid","useState","Row","Board","Columns","Rows","Tutorial","rowsComplete","setRowsComplete","rawRows","gameRows","RowObject","board"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMQ,OAAO,GAAG,CACZ,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CADY,EAEZ,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAFY,EAGZ,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAHY,EAIZ,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAJY,EAKZ,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CALY,CAAhB;AAQA,QAAMC,QAAQ,GAAGC,SAAS,CAACF,OAAD,CAA1B,CAX+B,CAa/B;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAA,cACKF,YAAY,GAAGK,KAAH,GAAW;AAD5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlCuBN,Q;;KAAAA,Q","sourcesContent":["import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Row from '../Row';\nimport Board from '../Board';\nimport Columns from '../Helpers/ColumnHelper';\nimport Rows from '../Helpers/RowHelper';\n\nexport default function Tutorial() {\n    const [rowsComplete, setRowsComplete] = useState(false);\n\n    const rawRows = [\n        [true, true, true, true, true],\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n        [true, true, true, true, true],\n    ];\n\n    const gameRows = RowObject(rawRows);\n\n    // const colNums = Columns(gameRows);\n\n    // const rowNums = Rows(gameRows);\n\n    // const tutorial = gameRows.map(row => {\n    //     return (\n    //         <Row \n    //             row={row}\n    //             id={row.id}\n    //             key={'row-'+nanoid()}\n    //         />\n    //     );\n    // });\n\n    // const board = <Board gameRows={gameRows} rowNums={rowNums} colNums={colNums} />\n    \n    return (\n        <div>\n            {rowsComplete ? board : null }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}