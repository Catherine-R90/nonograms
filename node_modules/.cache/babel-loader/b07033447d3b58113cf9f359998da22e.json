{"ast":null,"code":"var _jsxFileName = \"/var/www/dev_nonograms_com/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\"; // import FalseSquare from \"./FalseSquare\";\n\nimport Square from \"./Square\"; // import TrueSquare from \"./TrueSquare\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  _s();\n\n  const [rows, setRows] = useState(props.row); // const row = rows.map(square => {\n  //     if(square.tf == true) {\n  //         return (\n  //             <button \n  //                 className=\"true-square\"\n  //                 tf={square.tf}\n  //                 key={\"square-\"+nanoid()}\n  //                 id={props.id}\n  //                 onClick={() => handleClick(props.id)}\n  //             ></button>\n  //         );\n  //     } else {\n  //         return (\n  //             <button \n  //                 className=\"false-square\"\n  //                 tf={square.tf}\n  //                 key={\"square-\"+nanoid()}\n  //                 id={props.id}\n  //                 onClick={() => handleClick(props.id)}\n  //             ></button>\n  //         );\n  //     }\n  // })\n\n  const handleClick = key => {\n    const updatedRow = rows.map(square => {\n      if (square.key === key) {\n        return { ...square,\n          value: !square.value\n        };\n      }\n\n      return square;\n    });\n    setRows(updatedRow);\n  };\n\n  const row = rows.map(square => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: square.value,\n      id: square.id,\n      handleClick: handleClick\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"ypHkHOyccP9HvlUq3OgrLBHK4gU=\");\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Row.js"],"names":["nanoid","useState","Square","Row","props","rows","setRows","row","handleClick","key","updatedRow","map","square","value","id"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACG,KAAK,CAACG,GAAP,CAAhC,CAD+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,UAAMC,UAAU,GAAGL,IAAI,CAACM,GAAL,CAASC,MAAM,IAAI;AAClC,UAAGA,MAAM,CAACH,GAAP,KAAeA,GAAlB,EAAuB;AACnB,eAAO,EAAC,GAAGG,MAAJ;AAAYC,UAAAA,KAAK,EAAE,CAACD,MAAM,CAACC;AAA3B,SAAP;AACH;;AACD,aAAOD,MAAP;AACH,KALkB,CAAnB;AAMAN,IAAAA,OAAO,CAACI,UAAD,CAAP;AACH,GARD;;AAUA,QAAMH,GAAG,GAAGF,IAAI,CAACM,GAAL,CAASC,MAAM,IAAI;AAC3B,wBAAO,QAAC,MAAD;AACH,MAAA,KAAK,EAAEA,MAAM,CAACC,KADX;AAEH,MAAA,EAAE,EAAED,MAAM,CAACE,EAFR;AAGH,MAAA,WAAW,EAAEN;AAHV,OAIER,MAAM,EAJR;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPW,CAAZ;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnDuBJ,G;;KAAAA,G","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\n// import FalseSquare from \"./FalseSquare\";\nimport Square from \"./Square\";\n// import TrueSquare from \"./TrueSquare\";\n\nexport default function Row(props) {\n    const [rows, setRows] = useState(props.row);\n\n    // const row = rows.map(square => {\n    //     if(square.tf == true) {\n    //         return (\n    //             <button \n    //                 className=\"true-square\"\n    //                 tf={square.tf}\n    //                 key={\"square-\"+nanoid()}\n    //                 id={props.id}\n    //                 onClick={() => handleClick(props.id)}\n    //             ></button>\n    //         );\n    //     } else {\n    //         return (\n    //             <button \n    //                 className=\"false-square\"\n    //                 tf={square.tf}\n    //                 key={\"square-\"+nanoid()}\n    //                 id={props.id}\n    //                 onClick={() => handleClick(props.id)}\n    //             ></button>\n    //         );\n    //     }\n    // })\n\n    const handleClick = (key) => {\n        const updatedRow = rows.map(square => {\n            if(square.key === key) {\n                return {...square, value: !square.value}\n            }\n            return square;\n        });\n        setRows(updatedRow);\n    }\n\n    const row = rows.map(square => {\n        return <Square \n            value={square.value}\n            id={square.id}\n            handleClick={handleClick}\n            key={nanoid()}\n        />\n    });\n\n    return (\n        <div className=\"board-row\">\n            {row}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}