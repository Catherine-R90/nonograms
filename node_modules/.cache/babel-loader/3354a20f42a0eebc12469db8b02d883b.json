{"ast":null,"code":"export default function WinState(gameRows, boardRows, declareWinner) {\n  const gameVals = gameRows.map(gameRow => {\n    const values = gameRow.map(square => {\n      return square.value;\n    });\n    return values;\n  });\n  const boardVals = boardRows.map(boardRow => {\n    const values = boardRow.map(square => {\n      if (square.value === \"x-square\") {\n        return false;\n      } else {\n        return square.value;\n      }\n    });\n    return values;\n  });\n  const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n  const length = gameVals.length === boardVals.length;\n  const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n  if (isArray === true && length === true && matchVals === true) {\n    alert(\"Woohoo, you won!\");\n    return declareWinner(true);\n  }\n}\n_c = WinState;\n\nvar _c;\n\n$RefreshReg$(_c, \"WinState\");","map":{"version":3,"sources":["/var/www/dev_nonograms_com/src/components/Helpers/WinState.js"],"names":["WinState","gameRows","boardRows","declareWinner","gameVals","map","gameRow","values","square","value","boardVals","boardRow","isArray","Array","length","matchVals","JSON","stringify","alert"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,aAAvC,EAAsD;AACjE,QAAMC,QAAQ,GAAGH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AACrC,UAAMC,MAAM,GAAGD,OAAO,CAACD,GAAR,CAAYG,MAAM,IAAE;AAC/B,aAAOA,MAAM,CAACC,KAAd;AACH,KAFc,CAAf;AAGA,WAAOF,MAAP;AACH,GALgB,CAAjB;AAOA,QAAMG,SAAS,GAAGR,SAAS,CAACG,GAAV,CAAcM,QAAQ,IAAI;AACxC,UAAMJ,MAAM,GAAGI,QAAQ,CAACN,GAAT,CAAaG,MAAM,IAAE;AAChC,UAAGA,MAAM,CAACC,KAAP,KAAiB,UAApB,EAAgC;AAC5B,eAAO,KAAP;AACH,OAFD,MAEO;AACH,eAAOD,MAAM,CAACC,KAAd;AACH;AACJ,KANc,CAAf;AAOA,WAAOF,MAAP;AACH,GATiB,CAAlB;AAWA,QAAMK,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcR,QAAd,KAA2BS,KAAK,CAACD,OAAN,CAAcF,SAAd,CAA3C;AACA,QAAMI,MAAM,GAAGV,QAAQ,CAACU,MAAT,KAAoBJ,SAAS,CAACI,MAA7C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeP,SAAf,MAA8BM,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAhD;;AAEA,MAAGQ,OAAO,KAAK,IAAZ,IAAoBE,MAAM,KAAK,IAA/B,IAAuCC,SAAS,KAAK,IAAxD,EAA8D;AAC1DG,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACA,WAAOf,aAAa,CAAC,IAAD,CAApB;AACH;AAEJ;KA5BuBH,Q","sourcesContent":["export default function WinState(gameRows, boardRows, declareWinner) {\n    const gameVals = gameRows.map(gameRow => {\n        const values = gameRow.map(square=>{\n            return square.value;\n        });\n        return values;\n    })\n    \n    const boardVals = boardRows.map(boardRow => {\n        const values = boardRow.map(square=>{\n            if(square.value === \"x-square\") {\n                return false\n            } else {\n                return square.value;\n            }\n        });\n        return values;\n    })\n\n    const isArray = Array.isArray(gameVals) && Array.isArray(boardVals);\n    const length = gameVals.length === boardVals.length;\n    const matchVals = JSON.stringify(boardVals) === JSON.stringify(gameVals);\n\n    if(isArray === true && length === true && matchVals === true) {\n        alert(\"Woohoo, you won!\");\n        return declareWinner(true);\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}